// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model Product {
  id    String     @id @default(uuid())
  title String  
  description String
  price  String
  length String?
  course String[]
  imageUrl String
}

model User {
  id            String    @id @default(cuid())
  email         String?   @unique
  name String
  emailVerified DateTime?
  image         String?
  password      String?
  role Role @default(USER)
  accounts      Account[]
  isTwoFactorEnabled Boolean @default(true)
  twoFactorConfirmation TwoFactorConfirmation?
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model VerificationToken {
    id            String    @id @default(cuid())
    email String
    token String @unique
    expires DateTime

    @@unique([email, token])
}

model ResetToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorToken {
  id String @id @default(cuid())
  email String
  token String @unique
  expires DateTime

  @@unique([email, token])
}

model TwoFactorConfirmation {
  id String @id @default(cuid())

  userId String @unique
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}





